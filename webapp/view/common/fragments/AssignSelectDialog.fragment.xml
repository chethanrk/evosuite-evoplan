<core:FragmentDefinition xmlns="sap.m" xmlns:table="sap.ui.table" xmlns:core="sap.ui.core" xmlns:controls="com.evorait.evoplan.ui.controls">
	<Dialog title="{ path: 'IS_PRT', formatter: '.formatter.getDialogTitle' }" contentHeight="80%" stretch="false" resizable="true"
		draggable="true" icon="sap-icon://activity-individual" class="treeTableDialog" beforeOpen="refreshDialogTable">
		<content>
			<Toolbar>
				<SearchField id="idSeachModalTree" search="onSearchModal" showRefreshButton="{= !${device>/support/touch} }" width="100%"/>
				<core:ExtensionPoint name="DialogExtP|AssignSelectDialog|ResourceHierarchySet|Toolbar|CustomItem"/>
			</Toolbar>
			<table:TreeTable id="assignModalTable" selectionMode="Single" enableColumnReordering="false" columnHeaderVisible="false"
				visibleRowCount="10" visibleRowCountMode="Auto" class="listTreeTable sapUiSizeCondensed" rowSelectionChange="onSelectionChange"
				selectionBehavior="Row" rows="{ path : '/ResourceHierarchySet', parameters:{ numberOfExpandedLevels:1, restoreTreeStateAfterChange:true } }">
				<table:columns>
					<table:Column label="{i18n>xtit.tableObject}" name="{i18n>xtit.tableObject}">
						<table:template>
							<controls:CustomTitle text="{Description}" tooltip="{Description}"
								titleStyle="{ path: 'NodeType', formatter: '.formatter.formatResourceTitle' }"
								availabilityIcon="{ path: 'IS_AVAILABLE', formatter: '.formatter.getAvailabilityIcon' }"
								iconColor="{ path: 'IS_AVAILABLE', formatter: '.formatter.formatIconColor' }"
								iconTooltip="{ path: 'IS_AVAILABLE', formatter: '.formatter.formatIconTooltip' }"
								icon="{ parts:[{path: 'NodeType'},{path: 'StatusIcon'}], formatter: '.formatter.getResourceIcon' }"
								isWorkTimeEnabled="{parts:[{path:'viewModel>/capacityPlanning'},{path:'viewModel>/selectedHierarchyView'}], formatter: '.formatter.formatProgressBarVisibility'}"
								showWorkTime="{path: 'NodeType', formatter: '.formatter.isResource'}"
								workTime="{path:'ACTUAL_WORKING_HOURS', type:'sap.ui.model.type.Float', formatOptions:{ 'decimals': 1 }}"
								highlightColor="{ path:'REQUIREMENT_PROFILE_COLOR', formatter:'.formatter.formatHighlighter'}"/>
						</table:template>
					</table:Column>
					<table:Column label="{i18n>xtit.tableWorkload}" name="{i18n>xtit.tableWorkload}" width="4.5rem" hAlign="End"
						visible="{= ${/#ResourceHierarchy/Utilization/@sap:visible} === 'true'? true : false }">
						<table:template>
							<Text text="{TOTAL_EFFORT}" wrapping="false"/>
						</table:template>
					</table:Column>
					<table:Column label="{i18n>xtit.tableWorkload}" name="{i18n>xtit.tableWorkload}" width="15%" hAlign="End"
						visible="{parts:[{path:'viewModel>/capacityPlanning'},{path:'viewModel>/selectedHierarchyView'}], formatter: '.formatter.formatProgressBarVisibility'}">
						<table:template>
							<ProgressIndicator percentValue="{path:'Utilization',formatter:'.formatter.formatProgress'}"
								displayValue="{path:'Utilization', type:'sap.ui.model.type.Float', formatOptions:{ 'decimals': 1 }}%" tooltip="{Utilization}"
								showValue="true" state="{path:'Utilization',formatter:'.formatter.formatProgressState'}"
								visible="{ path: 'NodeType', formatter: '.formatter.isResource' }"/>
						</table:template>
					</table:Column>
					<table:Column label="{i18n>xtit.tableAssignment}" name="{i18n>xtit.tableAssignment}" width="2.5rem" hAlign="End">
						<table:template>
							<Text text="{AssignmentCount}" visible="{= ${NodeType} === 'ASSIGNMENT' ? false : true }" wrapping="false"/>
						</table:template>
					</table:Column>
					<core:ExtensionPoint name="TableExtP|AssignSelectDialog|ResourceHierarchySet|TreeTable|CustomColumn"/>
				</table:columns>
			</table:TreeTable>
		</content>
		<beginButton>
			<core:ExtensionPoint name="DialogExtP|AssignSelectDialog|ResourceHierarchySet|BeginButton">
				<Button text="{i18n>xbut.buttonCancel}" press="onCloseDialog"/>
			</core:ExtensionPoint>
		</beginButton>
		<endButton>
			<core:ExtensionPoint name="DialogExtP|AssignSelectDialog|ResourceHierarchySet|EndButton">
				<Button text="{i18n>xbut.buttonOK}" type="Emphasized" press="onSaveDialog"/>
			</core:ExtensionPoint>
		</endButton>
	</Dialog>
</core:FragmentDefinition>