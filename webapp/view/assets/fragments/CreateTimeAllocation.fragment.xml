<core:FragmentDefinition
        xmlns="sap.m"
        xmlns:core="sap.ui.core"
        xmlns:form="sap.ui.layout.form">
    <Dialog title="{i18n>xtit.createTimeAlloc}"
            contentWidth="60%"
            resizable="true"
            afterClose="onCloseTimeAlloc">
        <content>
            <form:Form id="idFormTimeAlloc" width="100%" editable="true" visible="true">
                <form:formContainers>
                    <form:FormContainer visible="true">
                        <form:formElements>
                            <form:FormElement visible="true">
                                <form:label>
                                    <Label text="{i18n>xfld.mainTStartDt}" required="true"/>
                                </form:label>
                                <form:fields>
                                    <DateTimePicker change="onChange" id="idTimeAllocSD" dateValue="{timeAlloc>/dateFrom}" required="true"/>
                                </form:fields>
                            </form:FormElement>
                            <form:FormElement visible="true">
                                <form:label>
                                    <Label text="{i18n>xfld.mainTEndDt}" required="true"/>
                                </form:label>
                                <form:fields>
                                    <DateTimePicker change="onChange" dateValue="{timeAlloc>/dateTo}" id="idTimeAllocED" required="true"/>
                                </form:fields>
                            </form:FormElement>
                            <form:FormElement visible="true">
                                <form:label>
                                    <Label text="{i18n>xtit.priority}" required="false"
                                           textAlign="Begin"/>
                                </form:label>
                                <form:fields>
                                    <ComboBox id="idTimeAllocColr" selectedKey="{timeAlloc>/priority}"
										items="{
												path: '/UnavailabilityCodesSet'
											}">
										<core:Item key="{UnavailabilityCode}" text="{UnavailabilityCodeDesc}" />
									</ComboBox>
                                </form:fields>
                            </form:FormElement>
                            <form:FormElement visible="true">
                                <form:label>
                                    <Label text="{i18n>xtit.tableObject}" required="true"
                                           textAlign="Begin"/>
                                </form:label>
                                <form:fields>
                                    <Input id="idTimeAllocDesc" value="{timeAlloc>/desc}" change="onChange" required="true"/>
                                </form:fields>
                            </form:FormElement>
                            
                        </form:formElements>
                    </form:FormContainer>
                </form:formContainers>
                <form:layout>
            <form:ResponsiveGridLayout adjustLabelSpan="false" columnsL="2" labelSpanL="6" columnsM="1"
                                       labelSpanM="6" labelSpanS="12"/>
        </form:layout>
        </form:Form>

        </content>

        <buttons>
            <Button text="{i18n>xbut.buttonClose}"
                    press="onCloseDialog"/>
            <Button text="{i18n>xbut.buttonUpdate}"
                    type="Emphasized"
                    visible="{
                        path:'timeAlloc>/guid',
                        formatter:'.formatter.formatUpdateButton'
                    }"
                    press="onSaveTimeAlloc"/>
            <Button text="{i18n>xbut.buttonSave}"
                    type="Emphasized"
                    visible="{
                        path:'timeAlloc>/guid',
                        formatter:'.formatter.formatSaveButton'
                    }"
                    press="onSaveTimeAlloc"/>
        </buttons>

    </Dialog>
</core:FragmentDefinition>