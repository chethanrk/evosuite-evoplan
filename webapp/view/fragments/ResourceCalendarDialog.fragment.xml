<core:FragmentDefinition
        xmlns="sap.m"
        xmlns:core="sap.ui.core"
        xmlns:unified="sap.ui.unified">

    <Dialog id="planCalendarDialog"
            title="{i18n>xtit.calendarModalTitle}"
            contentWidth="100%"
            stretch="true"
            resizable="false">
        <content>
            <VBox class="sapUiSmallMargin">
                <PlanningCalendar
                        id="planningCalendar"
                        startDate="{path: 'calendarModel>/startDate'}"
                        rows="{path: 'calendarModel>/resources'}"
                        viewKey="{
                        	path:'calendarModel>/viewKey',
                            formatter:'.formatter.getCalendarView'
                        }"
                        appointmentSelect="onClickCalendarAssignment"
                        appointmentsVisualization="Filled"
                        showWeekNumbers="true"
                        groupAppointmentsMode="Expanded"
                        stickyHeader="true"
                        viewChange ="onViewChange">
                    <rows>
                        <PlanningCalendarRow
                                icon="{
                                              path: 'calendarModel>ObjectType',
                                              formatter: '.formatter.getResourceIcon'
                                       }"
                                title="{calendarModel>GroupDescription}"
                                text="{calendarModel>ResourceDescription}"
                                enableAppointmentsDragAndDrop="{user>/ENABLE_DRAG_DROP}"
                                enableAppointmentsResize="{ parts:[
                                {path:'user>/ENABLE_DRAG_DROP'},
                                {path:'user>/ENABLE_RESIZE'}
                                ],
                                formatter:'.formatter.formatResizeEnable'}"
                                appointmentDragEnter="onAppointmentDragEnter"
                                appointmentDrop="onAppointmentDrop"
                                appointmentResize="onAppointmentResize"
                                appointments="{path : 'calendarModel>Assignments', templateShareable: 'true'}"
                                intervalHeaders="{path: 'calendarModel>AbsenceInfo', templateShareable: 'true'}">
                            <appointments>
                                <unified:CalendarAppointment
                                        startDate="{calendarModel>DateFrom}"
                                        endDate="{calendarModel>DateTo}"
                                        title="{calendarModel>Demand/DemandDesc}"
                                        tooltip="{calendarModel>Demand/ORDERID}- {calendarModel>Demand/DemandDesc} : {calendarModel>Demand/StatusDesc}"
                                        icon="{calendarModel>Demand/STATUS_ICON}"
                                        text="{calendarModel>Demand/ORDERID}"
                                        type="{calendarModel>type}"
                                        color="{
							                        path:'calendarModel>Demand/CRITICALITY',
							                        formatter:'.formatter.formatStatusIconColor'
							                   }">
                                </unified:CalendarAppointment>
                            </appointments>
                            <intervalHeaders>
                                <unified:CalendarAppointment
                                        startDate="{calendarModel>DateFrom}"
                                        endDate="{calendarModel>DateTo}"
                                        title="{calendarModel>Description}"
                                        type="Type06">
                                </unified:CalendarAppointment>
                            </intervalHeaders>
                        </PlanningCalendarRow>
                    </rows>
                </PlanningCalendar>
            </VBox>
        </content>

        <beginButton>
        	<Button text="{i18n>xbut.buttonSave}" type="Emphasized"
                    press="onSaveDialog" />
        </beginButton>

        <endButton>
        	 <Button text="{i18n>xbut.buttonClose}" press="onModalCancel" />
        </endButton>
    </Dialog>

</core:FragmentDefinition>