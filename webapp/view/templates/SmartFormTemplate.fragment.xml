<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:smartForm="sap.ui.comp.smartform"
	xmlns:smartField="sap.ui.comp.smartfield" xmlns:layout="sap.ui.layout"
	xmlns:app="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1">
	<smartForm:SmartForm fieldGroupIds="smartFormTemplate" class="smartFormTemplate" app:defaultCheckBoxDisplayBehaviour="OnOff"
		editTogglable="false" editable="false">
		<smartForm:customData>
			<core:CustomData key="suppressUnit" value="false"/>
			<core:CustomData key="defaultDropDownDisplayBehaviour" value='descriptionAndId'/>
		</smartForm:customData>
		<smartForm:layout>
			<smartForm:Layout labelSpanXL="3" labelSpanL="5" labelSpanM="5" labelSpanS="12" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0"
				columnsXL="4" columnsL="3" columnsM="2"></smartForm:Layout>
		</smartForm:layout>
		<template:repeat list="{path:'facets>'}" var="facets">
			<template:with path="facets>Target" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="target">
				<smartForm:Group label="{path:'target>com.sap.vocabularies.Common.v1.Label',formatter:'.AH.format'}">
					<smartForm:layoutData>
						<template:if test="{:= (${target>Org.OData.Core.V1.Description/String} === 'longText')}">
							<template:then>
								<layout:GridData span="XL12 L12 M12 S12"/>
							</template:then>
							<template:else>
								<layout:GridData span="L6 M6 S12"/>
							</template:else>
						</template:if>
					</smartForm:layoutData>
					<template:with path="target>Data" var="data">
						<template:repeat list="{data>}">
							<smartForm:GroupElement>
								<template:if test="{:= ${data>Value/Path} in ${templateProperties>/navLinks} }">
									<template:then>
										<smartField:SmartField value="{path:'data>Value',formatter:'.AH.simplePath'}"
											name="{path:'data>Value',formatter:'com.evorait.evoplan.model.AnnotationHelper.getSmartFieldName'}" change="onChangeSmartField"
											uomEditable="false" press="onPressSmartField" url="{data>Value/Path}"
											editable="{:= ${data>Common.FieldControl/EnumMember} === 'Common.FieldControlType/ReadOnly' ? false : true}"
											mandatory="{:= ${data>Common.FieldControl/EnumMember} === 'CommonFieldControlType/Mandatory'}">
											<smartField:configuration>
												<smartField:Configuration controlType="auto" displayBehaviour="descriptionAndId" preventInitialDataFetchInValueHelpDialog="false"/>
											</smartField:configuration>
										</smartField:SmartField>
									</template:then>
									<template:else>
										<smartField:SmartField value="{path:'data>Value',formatter:'.AH.simplePath'}"
											name="{path:'data>Value',formatter:'com.evorait.evoplan.model.AnnotationHelper.getSmartFieldName'}" change="onChangeSmartField"
											uomEditable="false" editable="{:= ${data>Common.FieldControl/EnumMember} === 'Common.FieldControlType/ReadOnly' ? false : true}"
											mandatory="{:= ${data>Common.FieldControl/EnumMember} === 'Common.FieldControlType/Mandatory'}">
											<smartField:configuration>
												<smartField:Configuration controlType="auto" displayBehaviour="descriptionAndId" preventInitialDataFetchInValueHelpDialog="false"/>
											</smartField:configuration>
										</smartField:SmartField>
									</template:else>
								</template:if>
							</smartForm:GroupElement>
						</template:repeat>
					</template:with>
				</smartForm:Group>
			</template:with>
		</template:repeat>
	</smartForm:SmartForm>
</core:FragmentDefinition>